name: Build and Release

permissions:
    contents: write

on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    build-and-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout source
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build userscript
              run: pnpm build userscript

            - name: Build bundle
              run: pnpm build bundle

            - name: Get package version
              id: version
              run: |
                  PACKAGE_VERSION=$(node -p "require('./plugins/package.json').version")
                  SHORT_SHA=$(git rev-parse --short HEAD)
                  echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
                  echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

            - name: Check if release already exists
              id: check_release
              run: |
                  if gh release view "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
                    echo "exists=true" >> $GITHUB_OUTPUT
                  else
                    echo "exists=false" >> $GITHUB_OUTPUT
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create GitHub release
              if: steps.check_release.outputs.exists == 'false'
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v${{ steps.version.outputs.version }}
                  name: ${{ steps.version.outputs.version }}-${{ steps.version.outputs.short_sha }}
                  body: |
                      Automated release for version ${{ steps.version.outputs.version }} (commit ${{ steps.version.outputs.short_sha }}).
                  files: |
                      dist/readit.user.js
                      dist/readit.bundle.js
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
